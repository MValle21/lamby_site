#!/bin/bash

set -e

# Clean any previous bundle/builds.
rm -rf ./.bundle \
  ./vendor/bundle \
  ./.aws-sam/build

# Ensure native extensions built for platform.
sam build --use-container

# [HOOK] Environments & Configuration
./bin/bundle
./bin/rake -rlamby lamby:ssm:dotenv \
  LAMBY_SSM_PARAMS_PATH="/config/${RAILS_ENV}/lamby/env" \
  LAMBY_SSM_PARAMS_LABEL="live"
mv ".env.${RAILS_ENV}" ./.aws-sam/build/RailsFunction/

# [HOOK] Asset Hosts & Precompiling
npm install
./bin/rails assets:clobber
NODE_ENV=$RAILS_ENV ./bin/rails assets:precompile
cp -rf ./config/manifest.json ./.aws-sam/build/RailsFunction/config/
cp -rf ./public/assets ./.aws-sam/build/RailsFunction/public/
cp -rf ./public/packs ./.aws-sam/build/RailsFunction/public/
pushd ./.aws-sam/build/RailsFunction/
aws s3 sync ./public/assets "s3://rails-asset-host-${AWS_DEFAULT_REGION}-${RAILS_ENV}/assets" \
  --cache-control "public, max-age=31536000"
aws s3 sync ./public/packs "s3://rails-asset-host-${AWS_DEFAULT_REGION}-${RAILS_ENV}/packs" \
  --cache-control "public, max-age=31536000"
rm -rf ./public/assets \
  ./public/packs/js \
  ./app/assets \
  ./app/javascript \
  ./vendor/assets \
  ./node_modules
popd

# Clean un-needed artifacts.
pushd ./.aws-sam/build/RailsFunction/
rm -rf .aws-sam \
  .DS_Store \
  .git \
  .gitignore \
  .ruby-version \
  .env.local \
  .env.development \
  .env.test \
  doc \
  log \
  test \
  template.yaml \
  tmp
pushd vendor/bundle/ruby/2.5.0
rm -rf cache
find gems -type d -name "test" -mindepth 2 -maxdepth 2 -exec rm -rf {} \;
find gems -type d -name "spec" -mindepth 2 -maxdepth 2 -exec rm -rf {} \;
popd
popd
