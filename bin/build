#!/bin/bash

set -e

# Clean any previous bundle/builds.
rm -rf ./.bundle \
  ./vendor/bundle \
  ./.aws-sam/build

# Ensure native extensions built for platform.
sam build --use-container

# [HOOK] Environments & Configuration
./bin/bundle
./bin/rake -rlamby lamby:ssm:dotenv \
  LAMBY_SSM_PARAMS_PATH="/config/${STAGE_ENV}/lamby/env" \
  LAMBY_SSM_PARAMS_LABEL="live" \
  LAMBY_SSM_PARAMS_FILE=".env"
mv ".env" ./.aws-sam/build/RailsFunction/

# [HOOK] Asset Hosts & Precompiling
echo '[HOOK] Asset Hosts & Precompiling'
rm -rf ./public/assets
LAMBY_BUILD=1 \
  NODE_ENV=$RAILS_ENV \
  ./bin/rails assets:precompile
mv ./config/manifest.json ./.aws-sam/build/RailsFunction/config
pipenv run aws s3 sync ./public/assets "s3://lamby-assets-${STAGE_ENV}/assets" \
  --cache-control "public, max-age=31536000"
pushd ./.aws-sam/build/RailsFunction/
rm -rf ./public/assets \
  ./app/assets \
  ./vendor/assets
popd

# Clean un-needed artifacts.
echo 'Clean un-needed artifacts.'
pushd ./.aws-sam/build/RailsFunction/
rm -rf .aws-sam \
  .DS_Store \
  .git \
  .gitignore \
  .ruby-version \
  .env.local \
  .env.development \
  .env.test \
  doc \
  log \
  test \
  template.yaml \
  tmp
pushd vendor/bundle/ruby/2.5.0
rm -rf cache
find gems -type d -name "test" -mindepth 2 -maxdepth 2 -exec rm -rf {} \;
find gems -type d -name "spec" -mindepth 2 -maxdepth 2 -exec rm -rf {} \;
popd
popd
